apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application }}-{{ .Values.environment }}
  labels:
    app: {{ .Values.application }}-{{ .Values.environment }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.application }}-{{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ .Values.application }}-{{ .Values.environment }}
    spec:
      restartPolicy: 
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecret }}
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: size
      #           operator: In
      #           values:
      #           - {{ .Values.size }}
      containers:
      - name: {{ .Values.application }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: "{{ .Values.resources.requests.memory }}"
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: "{{ .Values.resources.limits.memory }}"
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.livenessProbe.httpGet.port }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.readinessProbe.httpGet.port }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- end }}
        env:
          - name: spring.kafka.bootstrap-servers
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: spring_kafka_bootstrap_servers
          - name: ApplicationInsights__InstrumentationKey
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: applicationinsights-instrumentationkey
          - name: ES_HOST
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-uri
          - name: ES_USER
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-username
          - name: ES_PASS
            valueFrom:
              secretKeyRef:
                name: sec-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-password
          - name: KB_HOST
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-kb-uri
          - name: KB_USER
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-kb-username
          - name: KB_PASS
            valueFrom:
              secretKeyRef:
                name: sec-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-kb-password
          - name: IsApiKeyEnabled
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: isapikeyenabled
          - name: SeriLogMinimumLevel
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: serilogminimumlevel
          - name: COUNTRY
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: country
          - name: PRODUCT_NAME
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: product_name
          - name: APP_NAME
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: app_name
          - name: ElasticConfiguration__Port
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-port
          - name: ElasticConfiguration__Scheme
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: elasticconfiguration-scheme
          - name: Log__CustomerId
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-CustomerId
          - name: Log__ApplicationName  
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-ApplicationName
          - name: Log__ComponentName 
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-ComponentName
          - name: Log__ProductName
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-ProductName
          - name: Log__Country
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-Country
          - name: Log__MinimumLevel
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: Log-MinimumLevel
          - name: NEW_RELIC_APP_NAME
            valueFrom:
              configMapKeyRef:
                name: cm-{{ .Values.application }}-{{ .Values.environment }}
                key: new-relic-app-name
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: sec-{{ .Values.application }}-{{ .Values.environment }}
                key: new-relic-license-key