apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application }}-{{ .Values.environment }}
  labels:
    app: {{ .Values.application }}-{{ .Values.environment }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.application }}-{{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ .Values.application }}-{{ .Values.environment }}
    spec:
      restartPolicy: 
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecret }}
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: size
      #           operator: In
      #           values:
      #           - {{ .Values.size }}
      containers:
      - name: {{ .Values.application }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: "{{ .Values.resources.requests.memory }}"
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: "{{ .Values.resources.limits.memory }}"
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.livenessProbe.httpGet.port }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.readinessProbe.httpGet.port }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- end }}
        env:
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: connection-string-default-conn
        - name: ConnectionStrings__StagingDbConnection
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: connection-string-staging-conn
        - name: FletumApiBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: fletum-api-base-url
        - name: ValidationMicroserviceBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: validation-microservice-base-url
        - name: IdentityMicroserviceBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: identity-microservice-base-url
        - name: CreateEntityBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: create-entity-base-url
        - name: OtpServiceBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: otp-service-base-url
        - name: TelegramChatId
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: telegram-chatid
        - name: TelegramKey
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: telegram-key
        - name: URLs
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: urls
        - name: CepModuleBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: cep-module-base-url
        - name: FletumWebBaseUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: fletum-web-base-url
        - name: ApplicationInsights__InstrumentationKey
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: applicationinsights-instrumentationkey
        - name: CciOrderSecurityKey
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: cciordersecuritykey
        - name: VoyageOrderUrl
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: voyageorderurl
        - name: ElasticConfiguration__Uri
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: elasticconfiguration-uri
        - name: ElasticConfiguration__Username
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: elasticconfiguration-username
        - name: ElasticConfiguration__Password
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: elasticconfiguration-password
        - name: IsApiKeyEnabled
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: isapikeyenabled
        - name: SeriLogMinimumLevel
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: serilogminimumlevel
        - name: COUNTRY
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: country
        - name: PRODUCT_NAME
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: product_name
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: app_name
        - name: CacheTimespan
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: CacheTimespan
        - name: QueueSize
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: QueueSize
        - name: QueueDelay
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: QueueDelay
        - name: QueueEnabled
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: QueueEnabled
        - name: IsCache
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: IsCache
        - name: JwtConfiguration__Issuer
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: jwt-configuration-issuer
        - name: JwtConfiguration__Audience
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: jwt-configuration-audience
        - name: JwtConfiguration__SecurityKey
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: jwt-configuration-security-key
        - name: ElasticConfiguration__Port
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: elasticconfiguration-port
        - name: ElasticConfiguration__Scheme
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: elasticconfiguration-scheme
        - name: LogCustomerId
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-CustomerId
        - name: LogApplicationName
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-ApplicationName
        - name: LogComponentName
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-ComponentName
        - name: LogProductName
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-ProductName
        - name: LogCountry
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-Country
        - name: LogMinimumLevel
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: Log-MinimumLevel
        - name: NEW_RELIC_APP_NAME
          valueFrom:
            configMapKeyRef:
              name: cm-{{ .Values.application }}-{{ .Values.environment }}
              key: new-relic-app-name
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: sec-{{ .Values.application }}-{{ .Values.environment }}
              key: new-relic-license-key
